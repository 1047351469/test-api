type IsPlainObject<T> =
  T extends object
    ? T extends Function | any[] | string
      ? false
      : true
    : false;

// 合并所有键，去掉联合
type Merge<T> = {
  [K in keyof T]: T[K];
};

type ExtractOnlyLayerAsString<
  T,
  TargetDepth extends number,
  CurrentDepth extends any[] = []
> = CurrentDepth['length'] extends TargetDepth
  ? IsPlainObject<T> extends true
    ? Merge<{ [K in keyof T]: string }>
    : {}
  : IsPlainObject<T> extends true
    ? Merge<{
        [K in keyof T]: ExtractOnlyLayerAsString<T[K], TargetDepth, [...CurrentDepth, 1]>
      }>
    : {};
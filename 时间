function convertTo24Hour(time) {
  // 输入格式示例： "12:35 PM" 或 "01:45 AM"
  const [timePart, meridiem] = time.split(" "); // 分割时间和 AM/PM
  let [hours, minutes] = timePart.split(":").map(Number); // 分割小时和分钟

  if (meridiem === "AM" && hours === 12) {
    // AM 且是午夜 (12:XX AM) 转换为 0:XX
    hours = 0;
  } else if (meridiem === "PM" && hours !== 12) {
    // PM 且不是正午 (12:XX PM) 转换为 12 + hours
    hours += 12;
  }

  // 返回 24 小时制时间字符串，格式为 HH:MM
  return `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}`;
}

// 示例调用
console.log(convertTo24Hour("12:35 PM")); // 输出: "12:35"
console.log(convertTo24Hour("12:35 AM")); // 输出: "00:35"
console.log(convertTo24Hour("01:45 PM")); // 输出: "13:45"
console.log(convertTo24Hour("01:45 AM")); // 输出: "01:45"

import { createVuetify } from 'vuetify';
import { VBtn, VCard } from 'vuetify/components'; // 按需导入组件
import 'vuetify/styles'; // 必须导入基础样式

// 配置并导出 Vuetify 实例
export default createVuetify({
  components: {
    VBtn,
    VCard,
  },
});

import { createApp } from 'vue';
import App from './App.vue';
import vuetify from './plugins/vuetify'; // 引入配置好的 Vuetify

createApp(App).use(vuetify).mount('#app');

export default defineConfig({
  build: {
    rollupOptions: {
      treeshake: true, // 确保只保留使用的代码
    },
  },
});

<link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.3.0/css/materialdesignicons.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/@mdi/font@7.3.0/css/materialdesignicons.min.css" rel="stylesheet">

<link href="https://unpkg.com/@mdi/font@7.3.0/css/materialdesignicons.min.css" rel="stylesheet">
import axios from 'axios';

// 创建 axios 实例
const api = axios.create({
  baseURL: 'https://example.com/api',
  timeout: 5000, // 超时时间
});
//对象访问不存在属性 异步任务 参数序列化 本地存储
// 请求拦截器
api.interceptors.request.use(
  config => {
    console.log('Request Sent:', config);

    return config;
  },
  error => {
    console.error('Request Error:', error.message);
    return Promise.reject(error); // 确保请求错误被捕获
  }
);

// 响应拦截器
api.interceptors.response.use(
  response => {
    console.log('Response Received:', response);

    // 处理成功响应的通用逻辑
    if (response.status === 204) {
      console.log('No Content');
    } else if (response.status >= 200 && response.status < 300) {
      console.log('Successful Response:', response.data);
    }

    return response;
  },
  error => {
    console.error('Response Error:', error);

    if (error.response) {
      // 服务端返回的非 2xx 响应
      const status = error.response.status;

      if (status === 401) {
        console.error('Unauthorized: Token might be invalid');
      } else if (status === 403) {
        console.error('Forbidden: You do not have access');
      } else if (status === 404) {
        console.error('Not Found: The resource does not exist');
      } else if (status >= 500) {
        console.error('Server Error:', error.response.data);
      }
    } else if (error.code === 'ECONNABORTED') {
      // 请求超时
      console.error('Timeout Error:', error.message);
    } else if (error.message === 'Network Error') {
      // 网络错误
      console.error('Network Error: Please check your internet connection');
    }

    return Promise.reject(error); // 确保错误被传递到请求的 catch 中
  }
);



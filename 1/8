input[type=text]:focus {
    background-color: lightblue;
    outline: none;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2); /* 自定义阴影 */
    border: 2px solid #4CAF50; /* 自定义边框颜色 */
  }
<template>
  <div>
    <select
      ref="select"
      @focus="handleFocus"
      @blur="handleBlur"
      @mousedown="handleMouseDown"
    >
      <option value="">请选择</option>
      <option value="1">选项 1</option>
      <option value="2">选项 2</option>
    </select>
    <p v-if="blurred">你离开了输入框</p>
  </div>
</template>

<script setup>
import { ref } from "vue";

const blurred = ref(false);
const isDropdownOpen = ref(false);
const select = ref(null);

// 监听 `mousedown` 事件，判断是否点击的是 `<select>` 选项
const handleMouseDown = () => {
  isDropdownOpen.value = true;
};

// `focus` 事件触发时，重置 `blurred` 状态
const handleFocus = () => {
  blurred.value = false;
  isDropdownOpen.value = false;
};

// 只有当下拉框没有展开时，才触发 `blur`
const handleBlur = () => {
  if (!isDropdownOpen.value) {
    blurred.value = true;
  }
  isDropdownOpen.value = false;
};
</script>

<template>
  <v-container>
    <v-form ref="form">
      <v-row>
        <v-col cols="4">
          <v-select
            v-model="year"
            :items="years"
            label="年"
            :rules="[requiredRule]"
          ></v-select>
        </v-col>
        <v-col cols="4">
          <v-select
            v-model="month"
            :items="months"
            label="月"
            :rules="[requiredRule]"
          ></v-select>
        </v-col>
        <v-col cols="4">
          <v-select
            v-model="day"
            :items="days"
            label="日"
            :rules="[requiredRule]"
          ></v-select>
        </v-col>
      </v-row>

      <!-- 显示自定义错误信息 -->
      <v-alert v-if="errorMessage" type="error" class="mt-2">
        {{ errorMessage }}
      </v-alert>

      <v-btn color="primary" @click="validateForm">提交</v-btn>
    </v-form>
  </v-container>
</template>

<script setup>
import { ref, computed } from "vue";

// 绑定 v-model
const year = ref(null);
const month = ref(null);
const day = ref(null);

// 选项列表
const years = ref([2023, 2024, 2025]);
const months = ref([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
const days = ref([...Array(31).keys()].map((i) => i + 1));

// 必填规则
const requiredRule = (value) => (value ? true : "この項目は必須です");

// 自定义校验：检查年月日是否都有值
const errorMessage = computed(() => {
  if (!year.value || !month.value || !day.value) {
    return "すべての項目を選択してください。";
  }
  return "";
});

// v-form 的 ref
const form = ref(null);

// 提交表单时进行校验
const validateForm = async () => {
  // 先运行 v-form 的 validate 方法
  const { valid } = await form.value.validate();

  // 如果 v-form 校验通过，再检查年月日是否都填了
  if (valid && !errorMessage.value) {
    alert(`選択された日付: ${year.value}年 ${month.value}月 ${day.value}日`);
  } else {
    alert("エラー: " + errorMessage.value);
  }
};
</script>


如果你希望 校验逻辑和 Vuetify 默认的 rules 行为一致，那么只需要在 rules 里添加一个 自定义校验规则，确保 年月日都被选中，并在提交时使用 validate() 方法即可。


---

完整代码

<template>
  <v-container>
    <v-form ref="form">
      <v-row>
        <v-col cols="4">
          <v-select
            v-model="year"
            :items="years"
            label="年"
            :rules="[requiredRule, dateValidation]"
          ></v-select>
        </v-col>
        <v-col cols="4">
          <v-select
            v-model="month"
            :items="months"
            label="月"
            :rules="[requiredRule, dateValidation]"
          ></v-select>
        </v-col>
        <v-col cols="4">
          <v-select
            v-model="day"
            :items="days"
            label="日"
            :rules="[requiredRule, dateValidation]"
          ></v-select>
        </v-col>
      </v-row>

      <v-btn color="primary" @click="validateForm">提交</v-btn>
    </v-form>
  </v-container>
</template>

<script setup>
import { ref } from "vue";

// 绑定 v-model
const year = ref(null);
const month = ref(null);
const day = ref(null);

// 选项列表
const years = ref([2023, 2024, 2025]);
const months = ref([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);
const days = ref([...Array(31).keys()].map((i) => i + 1));

// 必填规则
const requiredRule = (value) => (value ? true : "この項目は必須です");

// 自定义校验规则：确保年月日全部选择
const dateValidation = () => {
  if (!year.value || !month.value || !day.value) {
    return "すべての項目を選択してください。";
  }
  return true;
};

// v-form 的 ref
const form = ref(null);

// 提交表单时进行校验
const validateForm = async () => {
  const { valid } = await form.value.validate();
  if (valid) {
    alert(`選択された日付: ${year.value}年 ${month.value}月 ${day.value}日`);
  } else {
    alert("すべての項目を選択してください。");
  }
};
</script>


---

实现逻辑

1. rules 里定义 requiredRule

确保 每个 v-select 不能为空，否则显示 "この項目は必須です"。



2. rules 里定义 dateValidation

这个规则检查 是否所有 v-select 都有值。

只有 年月日全部选中，校验才通过，否则显示 "すべての項目を選択してください"。



3. 提交时触发 validateForm()

form.validate() 运行所有 rules，检查是否符合规则。

如果通过，则显示选中的日期。

如果不通过，则 v-select 下方会显示相应的错误信息。





---

最终效果

✅ 和 rules 默认校验方式一致，错误信息显示在 v-select 下方
✅ **提交时才校验


import dayjs from "dayjs";

const formatDate = (year, month, day) => {
  return dayjs(`${year}-${month}-${day}`).format("YYYY-MM-DD");
};

// 示例
const year = 2024;
const month = 2;
const day = 8;

console.log(formatDate(year, month, day)); // 输出: "2024-02-08"